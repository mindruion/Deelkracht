version: '3.2'

services:
  web:
    build:
      context: ./
    command: bash -c '
      python manage.py collectstatic --no-input
      && python manage.py  runserver 0.0.0.0:8000
      '
    volumes:
      - static_volume:/code/backend/staticfiles
      - media_volume:/code/backend/mediafiles

    ports:
      - "8000:8000"
    depends_on:
      - db

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "test"
      POSTGRES_PASSWORD: "test"
      POSTGRES_DB: "test"
    expose:
      - 5436
    ports:
      - "5436:5436"
    command:
      - "postgres"
      - "-c"
      - "port=5436"
      - "-c"
      - "effective_cache_size=12GB"
      - "-c"
      - "maintenance_work_mem=1GB"
      - "-c"
      - "checkpoint_completion_target=0.7"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "work_mem=10485kB"
      - "-c"
      - "max_wal_size=4GB"
      - "-c"
      - "min_wal_size=1GB"

  nginx:
    build:
      dockerfile: Dockerfile
      context: ./nginx/
      network: host
    volumes:
      - static_volume:/code/backend/staticfiles
      - media_volume:/code/backend/mediafiles
      - letsencrypt:/etc/letsencrypt
      - "./nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: always
    links:
      - web:web

volumes:
  postgres_data:
  static_volume:
  media_volume:
  letsencrypt: